union zexception {
  zException: %unit
}

val zeq_bit = "eq_bit" : (%bit, %bit) ->  %bool

val znot_bool = "not" : (%bool) ->  %bool

val zand_bool = "and_bool" : (%bool, %bool) ->  %bool

val zeq_int = "eq_int" : (%i, %i) ->  %bool

val zeq_bool = "eq_bool" : (%bool, %bool) ->  %bool

val zlteq_int = "lteq" : (%i, %i) ->  %bool

val zgteq_int = "gteq" : (%i, %i) ->  %bool

val zlt_int = "lt" : (%i, %i) ->  %bool

val zgt_int = "gt" : (%i, %i) ->  %bool

val zadd_atom = "add_int" : (%i, %i) ->  %i

val zsub_atom = "sub_int" : (%i, %i) ->  %i

val zmult_atom = "mult_int" : (%i, %i) ->  %i

val zprint_int = "print_int" : (%string, %i) ->  %unit

val ztdiv_int = "tdiv_int" : (%i, %i) ->  %i

val zfdiv_int : (%i, %i) ->  %i

fn zfdiv_int(zn, zm) {
  zgaz31_lz30 : %bool;
  zgaz30_lz314 : %bool;
  zgsz30_lz317 : %i = 0;
  zgaz30_lz314 = zlt_int(zn, zgsz30_lz317);
  zgsz31_lz315 : %bool;
  jump zgaz30_lz314 goto 8 ` "/home/cfbolz/.opam/default/share/sail/lib/arith.sail 113:5 - 113:18";
  zgsz31_lz315 = false;
  goto 10;
  zgsz32_lz316 : %i = 0;
  zgsz31_lz315 = zgt_int(zm, zgsz32_lz316);
  zgaz31_lz30 = zgsz31_lz315;
  jump zgaz31_lz30 goto 34 ` "/home/cfbolz/.opam/default/share/sail/lib/arith.sail 113:2 - 119:3";
  zgaz35_lz35 : %bool;
  zgaz34_lz310 : %bool;
  zgsz33_lz313 : %i = 0;
  zgaz34_lz310 = zgt_int(zn, zgsz33_lz313);
  zgsz34_lz311 : %bool;
  jump zgaz34_lz310 goto 20 ` "/home/cfbolz/.opam/default/share/sail/lib/arith.sail 115:12 - 115:25";
  zgsz34_lz311 = false;
  goto 22;
  zgsz35_lz312 : %i = 0;
  zgsz34_lz311 = zlt_int(zm, zgsz35_lz312);
  zgaz35_lz35 = zgsz34_lz311;
  jump zgaz35_lz35 goto 26 ` "/home/cfbolz/.opam/default/share/sail/lib/arith.sail 115:9 - 119:3";
  return = ztdiv_int(zn, zm);
  goto 33;
  zgaz37_lz36 : %i;
  zgaz36_lz38 : %i;
  zgsz36_lz39 : %i = 1;
  zgaz36_lz38 = zsub_atom(zn, zgsz36_lz39);
  zgaz37_lz36 = ztdiv_int(zgaz36_lz38, zm);
  zgsz37_lz37 : %i = 1;
  return = zsub_atom(zgaz37_lz36, zgsz37_lz37);
  goto 41;
  zgaz33_lz31 : %i;
  zgaz32_lz33 : %i;
  zgsz38_lz34 : %i = 1;
  zgaz32_lz33 = zadd_atom(zn, zgsz38_lz34);
  zgaz33_lz31 = ztdiv_int(zgaz32_lz33, zm);
  zgsz39_lz32 : %i = 1;
  return = zsub_atom(zgaz33_lz31, zgsz39_lz32);
  end;
}

val zeq_bits = "eq_bits" : (%bv, %bv) ->  %bool

val zbitvector_length = "length" : (%bv) ->  %i

val zprint_bits = "print_bits" : (%string, %bv) ->  %unit

val zsail_zzero_extend = "zero_extend" : (%bv, %i) ->  %bv

val ztruncate = "sail_truncate" : (%bv, %i) ->  %bv

val zsail_mask : (%i, %bv) ->  %bv

fn zsail_mask(zlen, zv) {
  zgaz39_lz30 : %bool;
  zgaz38_lz31 : %i;
  zgaz38_lz31 = zbitvector_length(zv);
  zgaz39_lz30 = zlteq_int(zlen, zgaz38_lz31);
  jump zgaz39_lz30 goto 7 ` "/home/cfbolz/.opam/default/share/sail/lib/vector_dec.sail 81:29 - 81:100";
  return = zsail_zzero_extend(zv, zlen);
  goto 8;
  return = ztruncate(zv, zlen);
  end;
}

val zappend_64 = "append_64" : (%bv, %bv64) ->  %bv

val zbitvector_access = "vector_access" : (%bv, %i) ->  %bit

val zadd_bits_int = "add_bits_int" : (%bv, %i) ->  %bv

val zsub_bits = "sub_bits" : (%bv, %bv) ->  %bv

val znot_vec = "not_bits" : (%bv) ->  %bv

val zzzzz7ordzzJzzKdecz3sail_shiftleft = "shiftl" : (%bv, %i) ->  %bv

val zsail_zzeros = "zeros" : (%i) ->  %bv

val zsail_ones : (%i) ->  %bv

fn zsail_ones(zn) {
  zgaz310_lz30 : %bv;
  zgaz310_lz30 = zsail_zzeros(zn);
  return = znot_vec(zgaz310_lz30);
  end;
}

val zunsigned = "sail_unsigned" : (%bv) ->  %i

val zconcat_str = "concat_str" : (%string, %string) ->  %string

val zdec_str = "dec_str" : (%i) ->  %string

val zbits_str = "string_of_bits" : (%bv) ->  %string

val zprint_endline = "print_endline" : (%string) ->  %unit

val zhighest_set_bit : (%bv) ->  %i

fn zhighest_set_bit(zx) {
  zgsz310_lz31 : %i64;
  zgaz313_lz311 : %i;
  zgaz313_lz311 = zbitvector_length(zx);
  zgsz316_lz312 : %i = 1;
  zgsz317_lz313 : %i;
  zgsz317_lz313 = zsub_atom(zgaz313_lz311, zgsz316_lz312);
  zgsz310_lz31 = zgsz317_lz313;
  zgsz311_lz32 : %i64;
  zgsz311_lz32 = 0;
  zgsz312_lz33 : %i64;
  zgsz312_lz33 = 1;
  zi_lz35 : %i64;
  zi_lz35 = zgsz310_lz31;
  zgsz314_lz36 : %unit;
  jump @lt(zi_lz35, zgsz311_lz32) goto 29 ` "loop_exception.sail 15:2 - 16:44";
  zgaz312_lz37 : %bool;
  zgaz311_lz39 : %bit;
  zgsz313_lz310 : %i = zi_lz35;
  zgaz311_lz39 = zbitvector_access(zx, zgsz313_lz310);
  zgaz312_lz37 = zeq_bit(zgaz311_lz39, bitone);
  jump zgaz312_lz37 goto 23 ` "loop_exception.sail 16:4 - 16:44";
  zgsz314_lz36 = ();
  goto 27;
  zgsz315_lz38 : %i;
  zgsz315_lz38 = zi_lz35;
  return = zgsz315_lz38;
  goto 34;
  zi_lz35 = @isub(zi_lz35, zgsz312_lz33);
  goto 14;
  zgsz318_lz34 : %unit;
  zgsz318_lz34 = ();
  zgsz319_lz30 : %i;
  zgsz319_lz30 = -1;
  return = zgsz319_lz30;
  end;
}

val zthrows : (%unit) ->  %unit

fn zthrows(zgsz320) {
  zgaz314_lz30 : %union zexception;
  zgaz314_lz30 = zException(());
  current_exception = zgaz314_lz30;
  have_exception = true;
  throw_location = "loop_exception.sail 22:20 - 22:37";
  arbitrary;
}

register zR : %i

val zfetch_and_execute : (%unit) ->  %bool

fn zfetch_and_execute(zgsz321) {
  zgsz322_lz35 : %i = 1;
  zR = zadd_atom(zR, zgsz322_lz35);
  zgsz323_lz34 : %unit;
  zgsz323_lz34 = ();
  zgsz326_lz30 : %bool;
  zgaz315_lz31 : %bool;
  zgsz324_lz33 : %i = 3;
  zgaz315_lz31 = zgteq_int(zR, zgsz324_lz33);
  zgsz325_lz32 : %unit;
  jump zgaz315_lz31 goto 12 ` "loop_exception.sail 35:4 - 37:5";
  zgsz325_lz32 = ();
  goto 16;
  zgsz325_lz32 = zthrows(());
  jump have_exception goto 15 ` "unknown location";
  goto 16;
  goto 17;
  zgsz326_lz30 = true;
  jump @not(have_exception) goto 23 ` "loop_exception.sail 34:2 - 41:3";
  have_exception = false;
  jump current_exception is zException goto 22 ` "loop_exception.sail 40:4 - 40:15";
  zgsz326_lz30 = false;
  goto 23;
  have_exception = true;
  return = zgsz326_lz30;
  end;
}

val zmain : (%unit) ->  %unit

fn zmain(zgsz328) {
  zR = 0;
  zgsz356_lz3113 : %unit;
  zgsz356_lz3113 = ();
  zgsz329_lz3106 : %i64;
  zgsz329_lz3106 = 1;
  zgsz330_lz3107 : %i64;
  zgsz330_lz3107 = 3;
  zgsz331_lz3108 : %i64;
  zgsz331_lz3108 = 1;
  zi_lz3110 : %i64;
  zi_lz3110 = zgsz329_lz3106;
  zgsz332_lz3111 : %unit;
  jump @gt(zi_lz3110, zgsz330_lz3107) goto 17 ` "loop_exception.sail 53:2 - 55:3";
  zgsz333_lz3112 : %i = zi_lz3110;
  zgsz332_lz3111 = zprint_int("i = ", zgsz333_lz3112);
  zi_lz3110 = @iadd(zi_lz3110, zgsz331_lz3108);
  goto 12;
  zgsz355_lz3109 : %unit;
  zgsz355_lz3109 = ();
  zgsz334_lz399 : %i64;
  zgsz334_lz399 = 3;
  zgsz335_lz3100 : %i64;
  zgsz335_lz3100 = 1;
  zgsz336_lz3101 : %i64;
  zgsz336_lz3101 = 1;
  zi_lz3103 : %i64;
  zi_lz3103 = zgsz334_lz399;
  zgsz337_lz3104 : %unit;
  jump @lt(zi_lz3103, zgsz335_lz3100) goto 33 ` "loop_exception.sail 60:2 - 62:3";
  zgsz338_lz3105 : %i = zi_lz3103;
  zgsz337_lz3104 = zprint_int("i = ", zgsz338_lz3105);
  zi_lz3103 = @isub(zi_lz3103, zgsz336_lz3101);
  goto 28;
  zgsz354_lz3102 : %unit;
  zgsz354_lz3102 = ();
  zgaz317_lz394 : %bool;
  zgaz316_lz396 : %i;
  zgsz339_lz398 : %bv = 0b1;
  zgaz316_lz396 = zhighest_set_bit(zgsz339_lz398);
  zgsz340_lz397 : %i = 0;
  zgaz317_lz394 = zeq_int(zgaz316_lz396, zgsz340_lz397);
  zgsz353_lz395 : %unit;
  zgsz353_lz395 = zsail_assert(zgaz317_lz394, "loop_exception.sail 64:34 - 64:35");
  zgaz319_lz389 : %bool;
  zgaz318_lz391 : %i;
  zgsz341_lz393 : %bv = 0x2;
  zgaz318_lz391 = zhighest_set_bit(zgsz341_lz393);
  zgsz342_lz392 : %i = 1;
  zgaz319_lz389 = zeq_int(zgaz318_lz391, zgsz342_lz392);
  zgsz352_lz390 : %unit;
  zgsz352_lz390 = zsail_assert(zgaz319_lz389, "loop_exception.sail 65:37 - 65:38");
  zgaz321_lz384 : %bool;
  zgaz320_lz386 : %i;
  zgsz343_lz388 : %bv = 0b10000;
  zgaz320_lz386 = zhighest_set_bit(zgsz343_lz388);
  zgsz344_lz387 : %i = 4;
  zgaz321_lz384 = zeq_int(zgaz320_lz386, zgsz344_lz387);
  zgsz351_lz385 : %unit;
  zgsz351_lz385 = zsail_assert(zgaz321_lz384, "loop_exception.sail 66:38 - 66:39");
  zgaz323_lz379 : %bool;
  zgaz322_lz381 : %i;
  zgsz345_lz383 : %bv = 0x8000000000000000;
  zgaz322_lz381 = zhighest_set_bit(zgsz345_lz383);
  zgsz346_lz382 : %i = 63;
  zgaz323_lz379 = zeq_int(zgaz322_lz381, zgsz346_lz382);
  zgsz350_lz380 : %unit;
  zgsz350_lz380 = zsail_assert(zgaz323_lz379, "loop_exception.sail 67:53 - 67:54");
  zgaz325_lz374 : %bool;
  zgaz324_lz376 : %i;
  zgsz347_lz378 : %bv = 0x1;
  zgsz347_lz378 = zappend_64(zgsz347_lz378, 0x0000000000000000);
  zgaz324_lz376 = zhighest_set_bit(zgsz347_lz378);
  zgsz348_lz377 : %i = 64;
  zgaz325_lz374 = zeq_int(zgaz324_lz376, zgsz348_lz377);
  zgsz349_lz375 : %unit;
  zgsz349_lz375 = zsail_assert(zgaz325_lz374, "loop_exception.sail 68:55 - 68:56");
  zj_lz30 : %i;
  zj_lz30 = 0;
  zgsz359_lz368 : %bool;
  zgsz360_lz369 : %unit;
  zgsz361_lz373 : %i = 3;
  zgsz359_lz368 = zlt_int(zj_lz30, zgsz361_lz373);
  jump @not(zgsz359_lz368) goto 89 ` "loop_exception.sail 75:2 - 78:3";
  zgsz357_lz372 : %i = 1;
  zj_lz30 = zadd_atom(zj_lz30, zgsz357_lz372);
  zgsz358_lz371 : %unit;
  zgsz358_lz371 = ();
  zgsz360_lz369 = zprint_int("j = ", zj_lz30);
  goto 80;
  zgsz362_lz370 : %unit;
  zgsz362_lz370 = ();
  zk_lz31 : %bv8;
  zk_lz31 = 0x00;
  zgsz367_lz357 : %bool;
  zgsz368_lz358 : %unit;
  zgaz326_lz360 : %i64;
  zgaz326_lz360 = @unsigned::<64>(zk_lz31);
  zgsz371_lz366 : %i = 3;
  zgsz370_lz367 : %i = zgaz326_lz360;
  zgsz367_lz357 = zlt_int(zgsz370_lz367, zgsz371_lz366);
  jump @not(zgsz367_lz357) goto 111 ` "loop_exception.sail 85:2 - 88:3";
  zgsz363_lz363 : %bv = zk_lz31;
  zgsz364_lz364 : %i = 1;
  zgsz365_lz365 : %bv;
  zgsz365_lz365 = zadd_bits_int(zgsz363_lz363, zgsz364_lz364);
  zk_lz31 = zgsz365_lz365;
  zgsz366_lz362 : %unit;
  zgsz366_lz362 = ();
  zgsz369_lz361 : %bv = zk_lz31;
  zgsz368_lz358 = zprint_bits("k = ", zgsz369_lz361);
  goto 95;
  zgsz378_lz359 : %unit;
  zgsz378_lz359 = ();
  zgsz375_lz351 : %unit;
  zgsz373_lz353 : %bool;
  zgsz374_lz354 : %unit;
  zgsz373_lz353 = true;
  jump @not(zgsz373_lz353) goto 124 ` "loop_exception.sail 94:4 - 97:5";
  zgaz327_lz355 : %union zexception;
  zgaz327_lz355 = zException(());
  current_exception = zgaz327_lz355;
  have_exception = true;
  throw_location = "loop_exception.sail 95:6 - 95:23";
  goto 125;
  zgsz375_lz351 = ();
  jump @not(have_exception) goto 131 ` "loop_exception.sail 93:2 - 100:3";
  have_exception = false;
  jump current_exception is zException goto 130 ` "loop_exception.sail 99:4 - 99:15";
  zgsz375_lz351 = zprint_endline("Caught");
  goto 131;
  have_exception = true;
  zgsz377_lz352 : %unit;
  zgsz377_lz352 = zgsz375_lz351;
  zcaught_lz32 : %bool;
  zcaught_lz32 = false;
  zgsz383_lz344 : %bool;
  zgsz384_lz345 : %unit;
  zgsz383_lz344 = znot_bool(zcaught_lz32);
  jump @not(zgsz383_lz344) goto 156 ` "loop_exception.sail 107:2 - 115:3";
  zgsz381_lz347 : %unit;
  zgsz380_lz350 : %unit;
  zgsz380_lz350 = zprint_endline("Looping");
  zgaz328_lz348 : %union zexception;
  zgaz328_lz348 = zException(());
  current_exception = zgaz328_lz348;
  have_exception = true;
  throw_location = "loop_exception.sail 110:6 - 110:23";
  jump @not(have_exception) goto 154 ` "loop_exception.sail 108:4 - 114:5";
  have_exception = false;
  jump current_exception is zException goto 153 ` "loop_exception.sail 113:6 - 113:17";
  zcaught_lz32 = true;
  zgsz381_lz347 = ();
  goto 154;
  have_exception = true;
  zgsz384_lz345 = zgsz381_lz347;
  goto 137;
  zgsz3110_lz346 : %unit;
  zgsz3110_lz346 = ();
  zgsz388_lz338 : %unit;
  zgsz385_lz340 : %unit;
  zgaz329_lz343 : %union zexception;
  zgaz329_lz343 = zException(());
  current_exception = zgaz329_lz343;
  have_exception = true;
  throw_location = "loop_exception.sail 121:8 - 121:25";
  jump @not(have_exception) goto 177 ` "loop_exception.sail 121:4 - 127:5";
  have_exception = false;
  jump current_exception is zException goto 176 ` "loop_exception.sail 123:6 - 123:17";
  zgsz386_lz342 : %unit;
  zgsz386_lz342 = zprint_endline("Caught inner exception");
  zgaz330_lz341 : %union zexception;
  zgaz330_lz341 = zException(());
  current_exception = zgaz330_lz341;
  have_exception = true;
  throw_location = "loop_exception.sail 125:1 - 125:18";
  goto 178;
  have_exception = true;
  zgsz388_lz338 = zgsz385_lz340;
  jump @not(have_exception) goto 184 ` "loop_exception.sail 120:2 - 130:3";
  have_exception = false;
  jump current_exception is zException goto 183 ` "loop_exception.sail 129:4 - 129:15";
  zgsz388_lz338 = zprint_endline("Caught outer exception");
  goto 184;
  have_exception = true;
  zgsz3109_lz339 : %unit;
  zgsz3109_lz339 = zgsz388_lz338;
  zgsz395_lz329 : %unit;
  zgsz390_lz331 : %unit;
  zgaz331_lz337 : %union zexception;
  zgaz331_lz337 = zException(());
  current_exception = zgaz331_lz337;
  have_exception = true;
  throw_location = "loop_exception.sail 136:8 - 136:25";
  jump @not(have_exception) goto 203 ` "loop_exception.sail 136:4 - 144:5";
  have_exception = false;
  jump current_exception is zException goto 202 ` "loop_exception.sail 139:6 - 139:17";
  zgaz333_lz335 : %union zexception;
  zgaz333_lz335 = zException(());
  current_exception = zgaz333_lz335;
  have_exception = true;
  throw_location = "loop_exception.sail 139:23 - 139:40";
  goto 204;
  zgsz390_lz331 = zsail_assert(false, "Unreachable");
  zgsz395_lz329 = zgsz390_lz331;
  jump @not(have_exception) goto 210 ` "loop_exception.sail 135:2 - 147:3";
  have_exception = false;
  jump current_exception is zException goto 209 ` "loop_exception.sail 146:4 - 146:15";
  zgsz395_lz329 = zprint_endline("Outer handler");
  goto 210;
  have_exception = true;
  zgsz3108_lz330 : %unit;
  zgsz3108_lz330 = zgsz395_lz329;
  zgsz3102_lz323 : %unit;
  zgsz397_lz325 : %unit;
  zgsz397_lz325 = zthrows(());
  jump have_exception goto 217 ` "unknown location";
  goto 218;
  goto 218;
  jump @not(have_exception) goto 237 ` "loop_exception.sail 153:4 - 161:5";
  have_exception = false;
  jump current_exception is zException goto 236 ` "loop_exception.sail 156:6 - 156:17";
  zgsz398_lz328 : %unit;
  zgsz398_lz328 = zthrows(());
  jump have_exception goto 225 ` "unknown location";
  goto 226;
  goto 238;
  zgsz3100_lz326 : %bool;
  zgsz3100_lz326 = true;
  jump @not(zgsz3100_lz326) goto 236 ` "loop_exception.sail 153:4 - 161:5";
  zgsz399_lz327 : %unit;
  zgsz399_lz327 = zsail_assert(false, "Unreachable");
  zgsz397_lz325 = zthrows(());
  jump have_exception goto 234 ` "unknown location";
  goto 235;
  goto 238;
  goto 237;
  zgsz397_lz325 = zsail_assert(false, "Unreachable");
  zgsz3102_lz323 = zgsz397_lz325;
  jump @not(have_exception) goto 244 ` "loop_exception.sail 152:2 - 164:3";
  have_exception = false;
  jump current_exception is zException goto 243 ` "loop_exception.sail 163:4 - 163:15";
  zgsz3102_lz323 = zprint_endline("Outer handler");
  goto 244;
  have_exception = true;
  zgsz3107_lz324 : %unit;
  zgsz3107_lz324 = zgsz3102_lz323;
  zgsz3104_lz320 : %bool;
  zgsz3105_lz321 : %unit;
  zgsz3105_lz321 = zprint_endline("Once");
  zgsz3104_lz320 = true;
  jump zgsz3104_lz320 goto 252 ` "loop_exception.sail 169:2 - 171:14";
  goto 248;
  zgsz3106_lz322 : %unit;
  zgsz3106_lz322 = ();
  zonce_lz33 : %bool;
  zonce_lz33 = false;
  zgsz3115_lz314 : %bool;
  zgsz3116_lz315 : %unit;
  zgsz3111_lz319 : %unit;
  zgsz3111_lz319 = zprint_endline("Once");
  zgsz3112_lz317 : %unit;
  zgaz334_lz318 : %union zexception;
  zgaz334_lz318 = zException(());
  current_exception = zgaz334_lz318;
  have_exception = true;
  throw_location = "loop_exception.sail 180:8 - 180:25";
  jump @not(have_exception) goto 270 ` "loop_exception.sail 180:4 - 183:5";
  have_exception = false;
  zonce_lz33 = true;
  zgsz3112_lz317 = ();
  zgsz3116_lz315 = zgsz3112_lz317;
  zgsz3115_lz314 = zonce_lz33;
  jump zgsz3115_lz314 goto 274 ` "loop_exception.sail 178:2 - 184:14";
  goto 258;
  zgsz3126_lz316 : %unit;
  zgsz3126_lz316 = ();
  zgaz335_lz311 : %bool;
  zgsz3117_lz313 : %bool;
  zgsz3117_lz313 = true;
  jump @not(have_exception) goto 282 ` "loop_exception.sail 189:5 - 189:34";
  have_exception = false;
  zgsz3117_lz313 = false;
  zgaz335_lz311 = zgsz3117_lz313;
  zgsz3125_lz312 : %unit;
  jump zgaz335_lz311 goto 287 ` "loop_exception.sail 189:2 - 191:3";
  zgsz3125_lz312 = ();
  goto 288;
  zgsz3125_lz312 = zprint_endline("ok");
  zgaz337_lz37 : %bool;
  zgsz3119_lz39 : %bool;
  zgaz336_lz310 : %union zexception;
  zgaz336_lz310 = zException(());
  current_exception = zgaz336_lz310;
  have_exception = true;
  throw_location = "loop_exception.sail 196:9 - 196:26";
  jump @not(have_exception) goto 298 ` "loop_exception.sail 196:5 - 196:46";
  have_exception = false;
  zgsz3119_lz39 = true;
  zgaz337_lz37 = zgsz3119_lz39;
  zgsz3124_lz38 : %unit;
  jump zgaz337_lz37 goto 303 ` "loop_exception.sail 196:2 - 198:3";
  zgsz3124_lz38 = ();
  goto 304;
  zgsz3124_lz38 = zprint_endline("ok");
  zgsz3121_lz34 : %bool;
  zgsz3122_lz35 : %unit;
  zgsz3121_lz34 = zfetch_and_execute(());
  jump have_exception goto 309 ` "unknown location";
  goto 310;
  goto 317;
  jump @not(zgsz3121_lz34) goto 313 ` "loop_exception.sail 203:2 - 203:33";
  zgsz3122_lz35 = ();
  goto 306;
  zgsz3123_lz36 : %unit;
  zgsz3123_lz36 = ();
  return = zprint_int("R = ", zR);
  end;
  arbitrary;
}

